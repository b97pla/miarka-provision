- name: Download anaconda
  get_url:
    url: "{{ anaconda_url }}"
    dest: "{{ anaconda_src }}"
    checksum: sha256:{{ anaconda_checksum }}

- name: Install anaconda
  shell: "{{ anaconda_src }} -b -p {{ anaconda_path }}"
  args:
    creates: "{{ anaconda_path }}/LICENSE.txt"

- name: Update anaconda
  shell: "{{ anaconda_path }}/bin/conda update -n base -c defaults conda -y"

- name: "Check if {{ conda_tools_env }} virtual env exists"
  shell: "{{ anaconda_path }}/bin/conda env list"
  register: tools_venv_exists

- name: Setup virtual env and install dependencies
  shell: "{{ anaconda_path }}/bin/conda create -n {{ conda_tools_env }} -c conda-forge git perl -y"
  when: not conda_tools_env in tools_venv_exists.stdout|split

- name: Add anaconda path to sourceme script
  lineinfile:
    dest: "{{ ngi_pipeline_conf }}/{{ bash_env_common_script }}"
    line: "export PATH={{ anaconda_path }}/bin:$PATH"
    backup: no

- name: Try getting anaconda version
  shell: "conda --version"
  register: conda_version
  ignore_errors: true

- name: Store anaconda version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "Anaconda: {{ conda_version.stdout }}"
  when: conda_version.stdout
